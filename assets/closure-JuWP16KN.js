import{u as n,c as l,w as r,_ as i,o,a as t,b as s}from"./app-DckgGu54.js";const p=t("div",{class:"prose m-auto slide-enter-content"},[t("h1",{id:"闭包",tabindex:"-1"},[s("闭包 "),t("a",{class:"header-anchor",href:"#闭包","aria-hidden":"true"},"#")]),t("h2",{id:"闭包的定义",tabindex:"-1"},[s("闭包的定义 "),t("a",{class:"header-anchor",href:"#闭包的定义","aria-hidden":"true"},"#")]),t("p",null,"闭包（closure）是一个函数以及其捆绑的周边环境状态（lexical environment，词法环境）的引用的组合。换而言之，闭包让开发者可以从内部函数访问外部函数的作用域。在 JavaScript 中，闭包会随着函数的创建而被同时创建。"),t("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light",style:{"--s-dark":"#dbd7caee","--s-light":"#393a34","--s-dark-bg":"#121212","--s-light-bg":"#ffffff"},tabindex:"0"},[t("code",{class:"language-javascript"},[t("span",{class:"line"},[t("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}},"function"),t("span",{style:{"--s-dark":"#80A665","--s-light":"#59873A"}}," fun"),t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"(){")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}},"	let"),t("span",{style:{"--s-dark":"#BD976A","--s-light":"#B07D48"}}," name"),t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}}," ="),t("span",{style:{"--s-dark":"#C98A7D99","--s-light":"#B5695999"}}," '"),t("span",{style:{"--s-dark":"#C98A7D","--s-light":"#B56959"}},"Carlos"),t("span",{style:{"--s-dark":"#C98A7D99","--s-light":"#B5695999"}},"'")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--s-dark":"#4D9375","--s-light":"#1E754F"}},"	return"),t("span",{style:{"--s-dark":"#CB7676","--s-light":"#AB5959"}}," function"),t("span",{style:{"--s-dark":"#80A665","--s-light":"#59873A"}}," getName"),t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"(){")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--s-dark":"#BD976A","--s-light":"#B07D48"}},"		console"),t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"."),t("span",{style:{"--s-dark":"#80A665","--s-light":"#59873A"}},"log"),t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"("),t("span",{style:{"--s-dark":"#BD976A","--s-light":"#B07D48"}},"name"),t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},")")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"	}")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--s-dark":"#80A665","--s-light":"#59873A"}},"	getName"),t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"()")]),s(`
`),t("span",{class:"line"},[t("span",{style:{"--s-dark":"#666666","--s-light":"#999999"}},"}")])])]),t("p",null,"函数fun中，定义了变量name和函数getName，getName可以使用函数fun中的变量name，它就是一个闭包。"),t("h2",{id:"闭包的使用场景",tabindex:"-1"},[s("闭包的使用场景 "),t("a",{class:"header-anchor",href:"#闭包的使用场景","aria-hidden":"true"},"#")]),t("p",null,"1.创造一个不受外部影响的作用域，作为私有属性来使用。 2.IIFE（自执行函数） 3.函数作为参数（回调函数） 4.将数据常驻内存（防止被GC）"),t("h2",{id:"闭包的清除",tabindex:"-1"},[s("闭包的清除 "),t("a",{class:"header-anchor",href:"#闭包的清除","aria-hidden":"true"},"#")]),t("p",null,"上述例子中，可以用fun=null，来清除闭包，GC机制会在适当时机释放内存。")],-1),m={__name:"closure",setup(c){const a={title:"JavaScript Closure-JS闭包",date:"2024-04-14T15:00:00.000Z",lang:"zh",duration:"10min",type:"blog",tag:"JavaScript",image:"https://antfu.me/og/closure.png",meta:[{property:"og:title",content:"JavaScript Closure-JS闭包"},{name:"twitter:title",content:"JavaScript Closure-JS闭包"},{property:"og:image",content:"https://antfu.me/og/closure.png"},{name:"twitter:image",content:"https://antfu.me/og/closure.png"},{name:"twitter:card",content:"summary_large_image"}]};return n({title:"JavaScript Closure-JS闭包",meta:[{property:"og:title",content:"JavaScript Closure-JS闭包"},{name:"twitter:title",content:"JavaScript Closure-JS闭包"},{property:"og:image",content:"https://antfu.me/og/closure.png"},{name:"twitter:image",content:"https://antfu.me/og/closure.png"},{name:"twitter:card",content:"summary_large_image"}]}),(g,h)=>{const e=i;return o(),l(e,{frontmatter:a},{default:r(()=>[p]),_:1})}}};export{m as default};
